
day8_nhom1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000508  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800069c  080006a4  000106a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800069c  0800069c  000106a4  2**0
                  CONTENTS
  4 .ARM          00000000  0800069c  0800069c  000106a4  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800069c  080006a4  000106a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800069c  0800069c  0001069c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006a0  080006a0  000106a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000106a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080006a4  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080006a4  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000106a4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001899  00000000  00000000  000106d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000059a  00000000  00000000  00011f6d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000290  00000000  00000000  00012508  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000258  00000000  00000000  00012798  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000bd09  00000000  00000000  000129f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001585  00000000  00000000  0001e6f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0003b7e9  00000000  00000000  0001fc7e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000ce  00000000  00000000  0005b467  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000acc  00000000  00000000  0005b538  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000684 	.word	0x08000684

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000684 	.word	0x08000684

080001d4 <delay_ms>:
// Button B4 (PB0)
#define BUTTON4_PORT             GPIOB
#define BUTTON4_PIN              GPIO_Pin_0
#define BUTTON4_SetClock         RCC_AHB1Periph_GPIOB

void delay_ms(uint32_t time) {
 80001d4:	b480      	push	{r7}
 80001d6:	b085      	sub	sp, #20
 80001d8:	af00      	add	r7, sp, #0
 80001da:	6078      	str	r0, [r7, #4]
	for (uint32_t i = 0; i < time * 3000; i++);
 80001dc:	2300      	movs	r3, #0
 80001de:	60fb      	str	r3, [r7, #12]
 80001e0:	e002      	b.n	80001e8 <delay_ms+0x14>
 80001e2:	68fb      	ldr	r3, [r7, #12]
 80001e4:	3301      	adds	r3, #1
 80001e6:	60fb      	str	r3, [r7, #12]
 80001e8:	687b      	ldr	r3, [r7, #4]
 80001ea:	f640 32b8 	movw	r2, #3000	; 0xbb8
 80001ee:	fb02 f303 	mul.w	r3, r2, r3
 80001f2:	68fa      	ldr	r2, [r7, #12]
 80001f4:	429a      	cmp	r2, r3
 80001f6:	d3f4      	bcc.n	80001e2 <delay_ms+0xe>
}
 80001f8:	bf00      	nop
 80001fa:	bf00      	nop
 80001fc:	3714      	adds	r7, #20
 80001fe:	46bd      	mov	sp, r7
 8000200:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000204:	4770      	bx	lr

08000206 <init_GPIO_output>:

void init_GPIO_output(GPIO_TypeDef *port, uint16_t pin, uint32_t clock) {
 8000206:	b580      	push	{r7, lr}
 8000208:	b086      	sub	sp, #24
 800020a:	af00      	add	r7, sp, #0
 800020c:	60f8      	str	r0, [r7, #12]
 800020e:	460b      	mov	r3, r1
 8000210:	607a      	str	r2, [r7, #4]
 8000212:	817b      	strh	r3, [r7, #10]
	GPIO_InitTypeDef GPIO_InitStruct;
	RCC_AHB1PeriphClockCmd(clock, ENABLE);
 8000214:	2101      	movs	r1, #1
 8000216:	6878      	ldr	r0, [r7, #4]
 8000218:	f000 f9f0 	bl	80005fc <RCC_AHB1PeriphClockCmd>
	GPIO_InitStruct.GPIO_Pin = pin;
 800021c:	897b      	ldrh	r3, [r7, #10]
 800021e:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_OUT;
 8000220:	2301      	movs	r3, #1
 8000222:	753b      	strb	r3, [r7, #20]
	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
 8000224:	2302      	movs	r3, #2
 8000226:	757b      	strb	r3, [r7, #21]
	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
 8000228:	2300      	movs	r3, #0
 800022a:	75bb      	strb	r3, [r7, #22]
	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
 800022c:	2301      	movs	r3, #1
 800022e:	75fb      	strb	r3, [r7, #23]
	GPIO_Init(port, &GPIO_InitStruct);
 8000230:	f107 0310 	add.w	r3, r7, #16
 8000234:	4619      	mov	r1, r3
 8000236:	68f8      	ldr	r0, [r7, #12]
 8000238:	f000 f951 	bl	80004de <GPIO_Init>
}
 800023c:	bf00      	nop
 800023e:	3718      	adds	r7, #24
 8000240:	46bd      	mov	sp, r7
 8000242:	bd80      	pop	{r7, pc}

08000244 <init_GPIO_input>:

void init_GPIO_input(GPIO_TypeDef *port, uint16_t pin, uint32_t clock) {
 8000244:	b580      	push	{r7, lr}
 8000246:	b086      	sub	sp, #24
 8000248:	af00      	add	r7, sp, #0
 800024a:	60f8      	str	r0, [r7, #12]
 800024c:	460b      	mov	r3, r1
 800024e:	607a      	str	r2, [r7, #4]
 8000250:	817b      	strh	r3, [r7, #10]
	GPIO_InitTypeDef GPIO_InitStruct;
	RCC_AHB1PeriphClockCmd(clock, ENABLE);
 8000252:	2101      	movs	r1, #1
 8000254:	6878      	ldr	r0, [r7, #4]
 8000256:	f000 f9d1 	bl	80005fc <RCC_AHB1PeriphClockCmd>
	GPIO_InitStruct.GPIO_Pin = pin;
 800025a:	897b      	ldrh	r3, [r7, #10]
 800025c:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IN;
 800025e:	2300      	movs	r3, #0
 8000260:	753b      	strb	r3, [r7, #20]
	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
 8000262:	2302      	movs	r3, #2
 8000264:	757b      	strb	r3, [r7, #21]
	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
 8000266:	2301      	movs	r3, #1
 8000268:	75fb      	strb	r3, [r7, #23]
	GPIO_Init(port, &GPIO_InitStruct);
 800026a:	f107 0310 	add.w	r3, r7, #16
 800026e:	4619      	mov	r1, r3
 8000270:	68f8      	ldr	r0, [r7, #12]
 8000272:	f000 f934 	bl	80004de <GPIO_Init>
}
 8000276:	bf00      	nop
 8000278:	3718      	adds	r7, #24
 800027a:	46bd      	mov	sp, r7
 800027c:	bd80      	pop	{r7, pc}

0800027e <LedControl_SetStatus>:

static void LedControl_SetStatus(GPIO_TypeDef *GPIOx, uint16_t GPIO_PIN, uint8_t Status) {
 800027e:	b480      	push	{r7}
 8000280:	b083      	sub	sp, #12
 8000282:	af00      	add	r7, sp, #0
 8000284:	6078      	str	r0, [r7, #4]
 8000286:	460b      	mov	r3, r1
 8000288:	807b      	strh	r3, [r7, #2]
 800028a:	4613      	mov	r3, r2
 800028c:	707b      	strb	r3, [r7, #1]
	if (Status == GPIO_PIN_SET)
 800028e:	787b      	ldrb	r3, [r7, #1]
 8000290:	2b01      	cmp	r3, #1
 8000292:	d103      	bne.n	800029c <LedControl_SetStatus+0x1e>
		GPIOx->BSRRL = GPIO_PIN;
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	887a      	ldrh	r2, [r7, #2]
 8000298:	831a      	strh	r2, [r3, #24]
	else
		GPIOx->BSRRH = GPIO_PIN;
}
 800029a:	e002      	b.n	80002a2 <LedControl_SetStatus+0x24>
		GPIOx->BSRRH = GPIO_PIN;
 800029c:	687b      	ldr	r3, [r7, #4]
 800029e:	887a      	ldrh	r2, [r7, #2]
 80002a0:	835a      	strh	r2, [r3, #26]
}
 80002a2:	bf00      	nop
 80002a4:	370c      	adds	r7, #12
 80002a6:	46bd      	mov	sp, r7
 80002a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ac:	4770      	bx	lr

080002ae <ButtonRead_Status>:

static uint8_t ButtonRead_Status(GPIO_TypeDef *GPIOx, uint16_t GPIO_PIN) {
 80002ae:	b480      	push	{r7}
 80002b0:	b083      	sub	sp, #12
 80002b2:	af00      	add	r7, sp, #0
 80002b4:	6078      	str	r0, [r7, #4]
 80002b6:	460b      	mov	r3, r1
 80002b8:	807b      	strh	r3, [r7, #2]
	return ((GPIOx->IDR & GPIO_PIN) != Bit_RESET) ? 1 : 0;
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	691a      	ldr	r2, [r3, #16]
 80002be:	887b      	ldrh	r3, [r7, #2]
 80002c0:	4013      	ands	r3, r2
 80002c2:	2b00      	cmp	r3, #0
 80002c4:	bf14      	ite	ne
 80002c6:	2301      	movne	r3, #1
 80002c8:	2300      	moveq	r3, #0
 80002ca:	b2db      	uxtb	r3, r3
}
 80002cc:	4618      	mov	r0, r3
 80002ce:	370c      	adds	r7, #12
 80002d0:	46bd      	mov	sp, r7
 80002d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002d6:	4770      	bx	lr

080002d8 <main>:

int main(void) {
 80002d8:	b580      	push	{r7, lr}
 80002da:	b084      	sub	sp, #16
 80002dc:	af00      	add	r7, sp, #0
	uint8_t b3_press_count = 0;
 80002de:	2300      	movs	r3, #0
 80002e0:	73fb      	strb	r3, [r7, #15]
	uint8_t b4_prev = 1, b4_toggle = 0;
 80002e2:	2301      	movs	r3, #1
 80002e4:	73bb      	strb	r3, [r7, #14]
 80002e6:	2300      	movs	r3, #0
 80002e8:	737b      	strb	r3, [r7, #13]

	// Khởi tạo output
	init_GPIO_output(LED_GREEN_PORT, LED_GREEN_PIN, LEDGREEN_SetClock);
 80002ea:	2201      	movs	r2, #1
 80002ec:	2120      	movs	r1, #32
 80002ee:	4864      	ldr	r0, [pc, #400]	; (8000480 <main+0x1a8>)
 80002f0:	f7ff ff89 	bl	8000206 <init_GPIO_output>
	init_GPIO_output(LED_RED1_PORT, LED_RED1_PIN, LEDRED1_SetClock);
 80002f4:	2201      	movs	r2, #1
 80002f6:	2102      	movs	r1, #2
 80002f8:	4861      	ldr	r0, [pc, #388]	; (8000480 <main+0x1a8>)
 80002fa:	f7ff ff84 	bl	8000206 <init_GPIO_output>
	init_GPIO_output(LED_RED2_PORT, LED_RED2_PIN, LEDRED2_SetClock);  // ← LED2 RED
 80002fe:	2202      	movs	r2, #2
 8000300:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000304:	485f      	ldr	r0, [pc, #380]	; (8000484 <main+0x1ac>)
 8000306:	f7ff ff7e 	bl	8000206 <init_GPIO_output>
	init_GPIO_output(LED_BLUE1_PORT, LED_BLUE1_PIN, LEDBLUE1_SetClock);
 800030a:	2201      	movs	r2, #1
 800030c:	2108      	movs	r1, #8
 800030e:	485c      	ldr	r0, [pc, #368]	; (8000480 <main+0x1a8>)
 8000310:	f7ff ff79 	bl	8000206 <init_GPIO_output>
	init_GPIO_output(LED_BLUE2_PORT, LED_BLUE2_PIN, LEDBLUE2_SetClock);
 8000314:	2201      	movs	r2, #1
 8000316:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800031a:	4859      	ldr	r0, [pc, #356]	; (8000480 <main+0x1a8>)
 800031c:	f7ff ff73 	bl	8000206 <init_GPIO_output>
	init_GPIO_output(BUZZER_PORT, BUZZER_PIN, BUZZER_SetClock);
 8000320:	2204      	movs	r2, #4
 8000322:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000326:	4858      	ldr	r0, [pc, #352]	; (8000488 <main+0x1b0>)
 8000328:	f7ff ff6d 	bl	8000206 <init_GPIO_output>

	// Khởi tạo input
	init_GPIO_input(BUTTON3_PORT, BUTTON3_PIN, BUTTON3_SetClock);
 800032c:	2201      	movs	r2, #1
 800032e:	2110      	movs	r1, #16
 8000330:	4853      	ldr	r0, [pc, #332]	; (8000480 <main+0x1a8>)
 8000332:	f7ff ff87 	bl	8000244 <init_GPIO_input>
	init_GPIO_input(BUTTON4_PORT, BUTTON4_PIN, BUTTON4_SetClock);
 8000336:	2202      	movs	r2, #2
 8000338:	2101      	movs	r1, #1
 800033a:	4852      	ldr	r0, [pc, #328]	; (8000484 <main+0x1ac>)
 800033c:	f7ff ff82 	bl	8000244 <init_GPIO_input>

	// 1. Nháy LED xanh khi khởi động
	for (int i = 0; i < 2; i++) {
 8000340:	2300      	movs	r3, #0
 8000342:	60bb      	str	r3, [r7, #8]
 8000344:	e012      	b.n	800036c <main+0x94>
		LedControl_SetStatus(LED_GREEN_PORT, LED_GREEN_PIN, GPIO_PIN_SET);
 8000346:	2201      	movs	r2, #1
 8000348:	2120      	movs	r1, #32
 800034a:	484d      	ldr	r0, [pc, #308]	; (8000480 <main+0x1a8>)
 800034c:	f7ff ff97 	bl	800027e <LedControl_SetStatus>
		delay_ms(200);
 8000350:	20c8      	movs	r0, #200	; 0xc8
 8000352:	f7ff ff3f 	bl	80001d4 <delay_ms>
		LedControl_SetStatus(LED_GREEN_PORT, LED_GREEN_PIN, GPIO_PIN_RESET);
 8000356:	2200      	movs	r2, #0
 8000358:	2120      	movs	r1, #32
 800035a:	4849      	ldr	r0, [pc, #292]	; (8000480 <main+0x1a8>)
 800035c:	f7ff ff8f 	bl	800027e <LedControl_SetStatus>
		delay_ms(200);
 8000360:	20c8      	movs	r0, #200	; 0xc8
 8000362:	f7ff ff37 	bl	80001d4 <delay_ms>
	for (int i = 0; i < 2; i++) {
 8000366:	68bb      	ldr	r3, [r7, #8]
 8000368:	3301      	adds	r3, #1
 800036a:	60bb      	str	r3, [r7, #8]
 800036c:	68bb      	ldr	r3, [r7, #8]
 800036e:	2b01      	cmp	r3, #1
 8000370:	dde9      	ble.n	8000346 <main+0x6e>
	}

	while (1) {
		// 2. Nhấn B3 hai lần → nháy 2 RED + 2 BLUE + buzzer
		if (ButtonRead_Status(BUTTON3_PORT, BUTTON3_PIN) == BTN_PRESS) {
 8000372:	2110      	movs	r1, #16
 8000374:	4842      	ldr	r0, [pc, #264]	; (8000480 <main+0x1a8>)
 8000376:	f7ff ff9a 	bl	80002ae <ButtonRead_Status>
 800037a:	4603      	mov	r3, r0
 800037c:	2b00      	cmp	r3, #0
 800037e:	d159      	bne.n	8000434 <main+0x15c>
			b3_press_count++;
 8000380:	7bfb      	ldrb	r3, [r7, #15]
 8000382:	3301      	adds	r3, #1
 8000384:	73fb      	strb	r3, [r7, #15]
			while (ButtonRead_Status(BUTTON3_PORT, BUTTON3_PIN) == BTN_PRESS);
 8000386:	bf00      	nop
 8000388:	2110      	movs	r1, #16
 800038a:	483d      	ldr	r0, [pc, #244]	; (8000480 <main+0x1a8>)
 800038c:	f7ff ff8f 	bl	80002ae <ButtonRead_Status>
 8000390:	4603      	mov	r3, r0
 8000392:	2b00      	cmp	r3, #0
 8000394:	d0f8      	beq.n	8000388 <main+0xb0>
			delay_ms(50);
 8000396:	2032      	movs	r0, #50	; 0x32
 8000398:	f7ff ff1c 	bl	80001d4 <delay_ms>

			if (b3_press_count == 2) {
 800039c:	7bfb      	ldrb	r3, [r7, #15]
 800039e:	2b02      	cmp	r3, #2
 80003a0:	d148      	bne.n	8000434 <main+0x15c>
				for (int i = 0; i < 2; i++) {
 80003a2:	2300      	movs	r3, #0
 80003a4:	607b      	str	r3, [r7, #4]
 80003a6:	e040      	b.n	800042a <main+0x152>
					LedControl_SetStatus(LED_RED1_PORT, LED_RED1_PIN, GPIO_PIN_SET);
 80003a8:	2201      	movs	r2, #1
 80003aa:	2102      	movs	r1, #2
 80003ac:	4834      	ldr	r0, [pc, #208]	; (8000480 <main+0x1a8>)
 80003ae:	f7ff ff66 	bl	800027e <LedControl_SetStatus>
					LedControl_SetStatus(LED_RED2_PORT, LED_RED2_PIN, GPIO_PIN_SET);
 80003b2:	2201      	movs	r2, #1
 80003b4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80003b8:	4832      	ldr	r0, [pc, #200]	; (8000484 <main+0x1ac>)
 80003ba:	f7ff ff60 	bl	800027e <LedControl_SetStatus>
					LedControl_SetStatus(LED_BLUE1_PORT, LED_BLUE1_PIN, GPIO_PIN_SET);
 80003be:	2201      	movs	r2, #1
 80003c0:	2108      	movs	r1, #8
 80003c2:	482f      	ldr	r0, [pc, #188]	; (8000480 <main+0x1a8>)
 80003c4:	f7ff ff5b 	bl	800027e <LedControl_SetStatus>
					LedControl_SetStatus(LED_BLUE2_PORT, LED_BLUE2_PIN, GPIO_PIN_SET);
 80003c8:	2201      	movs	r2, #1
 80003ca:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80003ce:	482c      	ldr	r0, [pc, #176]	; (8000480 <main+0x1a8>)
 80003d0:	f7ff ff55 	bl	800027e <LedControl_SetStatus>
					LedControl_SetStatus(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_SET);
 80003d4:	2201      	movs	r2, #1
 80003d6:	f44f 7100 	mov.w	r1, #512	; 0x200
 80003da:	482b      	ldr	r0, [pc, #172]	; (8000488 <main+0x1b0>)
 80003dc:	f7ff ff4f 	bl	800027e <LedControl_SetStatus>
					delay_ms(200);
 80003e0:	20c8      	movs	r0, #200	; 0xc8
 80003e2:	f7ff fef7 	bl	80001d4 <delay_ms>

					LedControl_SetStatus(LED_RED1_PORT, LED_RED1_PIN, GPIO_PIN_RESET);
 80003e6:	2200      	movs	r2, #0
 80003e8:	2102      	movs	r1, #2
 80003ea:	4825      	ldr	r0, [pc, #148]	; (8000480 <main+0x1a8>)
 80003ec:	f7ff ff47 	bl	800027e <LedControl_SetStatus>
					LedControl_SetStatus(LED_RED2_PORT, LED_RED2_PIN, GPIO_PIN_RESET);
 80003f0:	2200      	movs	r2, #0
 80003f2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80003f6:	4823      	ldr	r0, [pc, #140]	; (8000484 <main+0x1ac>)
 80003f8:	f7ff ff41 	bl	800027e <LedControl_SetStatus>
					LedControl_SetStatus(LED_BLUE1_PORT, LED_BLUE1_PIN, GPIO_PIN_RESET);
 80003fc:	2200      	movs	r2, #0
 80003fe:	2108      	movs	r1, #8
 8000400:	481f      	ldr	r0, [pc, #124]	; (8000480 <main+0x1a8>)
 8000402:	f7ff ff3c 	bl	800027e <LedControl_SetStatus>
					LedControl_SetStatus(LED_BLUE2_PORT, LED_BLUE2_PIN, GPIO_PIN_RESET);
 8000406:	2200      	movs	r2, #0
 8000408:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800040c:	481c      	ldr	r0, [pc, #112]	; (8000480 <main+0x1a8>)
 800040e:	f7ff ff36 	bl	800027e <LedControl_SetStatus>
					LedControl_SetStatus(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_RESET);
 8000412:	2200      	movs	r2, #0
 8000414:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000418:	481b      	ldr	r0, [pc, #108]	; (8000488 <main+0x1b0>)
 800041a:	f7ff ff30 	bl	800027e <LedControl_SetStatus>
					delay_ms(200);
 800041e:	20c8      	movs	r0, #200	; 0xc8
 8000420:	f7ff fed8 	bl	80001d4 <delay_ms>
				for (int i = 0; i < 2; i++) {
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	3301      	adds	r3, #1
 8000428:	607b      	str	r3, [r7, #4]
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	2b01      	cmp	r3, #1
 800042e:	ddbb      	ble.n	80003a8 <main+0xd0>
				}
				b3_press_count = 0;
 8000430:	2300      	movs	r3, #0
 8000432:	73fb      	strb	r3, [r7, #15]
			}
		}

		// 3. Nhấn B4 để bật/tắt LED2 đỏ (PB14)
		uint8_t b4_current = ButtonRead_Status(BUTTON4_PORT, BUTTON4_PIN);
 8000434:	2101      	movs	r1, #1
 8000436:	4813      	ldr	r0, [pc, #76]	; (8000484 <main+0x1ac>)
 8000438:	f7ff ff39 	bl	80002ae <ButtonRead_Status>
 800043c:	4603      	mov	r3, r0
 800043e:	70fb      	strb	r3, [r7, #3]
		if (b4_current == BTN_PRESS && b4_prev != BTN_PRESS) {
 8000440:	78fb      	ldrb	r3, [r7, #3]
 8000442:	2b00      	cmp	r3, #0
 8000444:	d118      	bne.n	8000478 <main+0x1a0>
 8000446:	7bbb      	ldrb	r3, [r7, #14]
 8000448:	2b00      	cmp	r3, #0
 800044a:	d015      	beq.n	8000478 <main+0x1a0>
			b4_toggle = !b4_toggle;
 800044c:	7b7b      	ldrb	r3, [r7, #13]
 800044e:	2b00      	cmp	r3, #0
 8000450:	bf0c      	ite	eq
 8000452:	2301      	moveq	r3, #1
 8000454:	2300      	movne	r3, #0
 8000456:	b2db      	uxtb	r3, r3
 8000458:	737b      	strb	r3, [r7, #13]
			LedControl_SetStatus(LED_RED2_PORT, LED_RED2_PIN, b4_toggle ? GPIO_PIN_SET : GPIO_PIN_RESET);
 800045a:	7b7b      	ldrb	r3, [r7, #13]
 800045c:	2b00      	cmp	r3, #0
 800045e:	bf14      	ite	ne
 8000460:	2301      	movne	r3, #1
 8000462:	2300      	moveq	r3, #0
 8000464:	b2db      	uxtb	r3, r3
 8000466:	461a      	mov	r2, r3
 8000468:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800046c:	4805      	ldr	r0, [pc, #20]	; (8000484 <main+0x1ac>)
 800046e:	f7ff ff06 	bl	800027e <LedControl_SetStatus>
			delay_ms(50);
 8000472:	2032      	movs	r0, #50	; 0x32
 8000474:	f7ff feae 	bl	80001d4 <delay_ms>
		}
		b4_prev = b4_current;
 8000478:	78fb      	ldrb	r3, [r7, #3]
 800047a:	73bb      	strb	r3, [r7, #14]
	while (1) {
 800047c:	e779      	b.n	8000372 <main+0x9a>
 800047e:	bf00      	nop
 8000480:	40020000 	.word	0x40020000
 8000484:	40020400 	.word	0x40020400
 8000488:	40020800 	.word	0x40020800

0800048c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800048c:	480d      	ldr	r0, [pc, #52]	; (80004c4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800048e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000490:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000494:	480c      	ldr	r0, [pc, #48]	; (80004c8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000496:	490d      	ldr	r1, [pc, #52]	; (80004cc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000498:	4a0d      	ldr	r2, [pc, #52]	; (80004d0 <LoopForever+0xe>)
  movs r3, #0
 800049a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800049c:	e002      	b.n	80004a4 <LoopCopyDataInit>

0800049e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800049e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004a0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004a2:	3304      	adds	r3, #4

080004a4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004a4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004a6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004a8:	d3f9      	bcc.n	800049e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004aa:	4a0a      	ldr	r2, [pc, #40]	; (80004d4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004ac:	4c0a      	ldr	r4, [pc, #40]	; (80004d8 <LoopForever+0x16>)
  movs r3, #0
 80004ae:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004b0:	e001      	b.n	80004b6 <LoopFillZerobss>

080004b2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004b2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004b4:	3204      	adds	r2, #4

080004b6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004b6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004b8:	d3fb      	bcc.n	80004b2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004ba:	f000 f8bf 	bl	800063c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004be:	f7ff ff0b 	bl	80002d8 <main>

080004c2 <LoopForever>:

LoopForever:
    b LoopForever
 80004c2:	e7fe      	b.n	80004c2 <LoopForever>
  ldr   r0, =_estack
 80004c4:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80004c8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004cc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80004d0:	080006a4 	.word	0x080006a4
  ldr r2, =_sbss
 80004d4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80004d8:	2000001c 	.word	0x2000001c

080004dc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004dc:	e7fe      	b.n	80004dc <ADC_IRQHandler>

080004de <GPIO_Init>:
 80004de:	b480      	push	{r7}
 80004e0:	b087      	sub	sp, #28
 80004e2:	af00      	add	r7, sp, #0
 80004e4:	6078      	str	r0, [r7, #4]
 80004e6:	6039      	str	r1, [r7, #0]
 80004e8:	2300      	movs	r3, #0
 80004ea:	617b      	str	r3, [r7, #20]
 80004ec:	2300      	movs	r3, #0
 80004ee:	613b      	str	r3, [r7, #16]
 80004f0:	2300      	movs	r3, #0
 80004f2:	60fb      	str	r3, [r7, #12]
 80004f4:	2300      	movs	r3, #0
 80004f6:	617b      	str	r3, [r7, #20]
 80004f8:	e076      	b.n	80005e8 <GPIO_Init+0x10a>
 80004fa:	2201      	movs	r2, #1
 80004fc:	697b      	ldr	r3, [r7, #20]
 80004fe:	fa02 f303 	lsl.w	r3, r2, r3
 8000502:	613b      	str	r3, [r7, #16]
 8000504:	683b      	ldr	r3, [r7, #0]
 8000506:	681b      	ldr	r3, [r3, #0]
 8000508:	693a      	ldr	r2, [r7, #16]
 800050a:	4013      	ands	r3, r2
 800050c:	60fb      	str	r3, [r7, #12]
 800050e:	68fa      	ldr	r2, [r7, #12]
 8000510:	693b      	ldr	r3, [r7, #16]
 8000512:	429a      	cmp	r2, r3
 8000514:	d165      	bne.n	80005e2 <GPIO_Init+0x104>
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	681a      	ldr	r2, [r3, #0]
 800051a:	697b      	ldr	r3, [r7, #20]
 800051c:	005b      	lsls	r3, r3, #1
 800051e:	2103      	movs	r1, #3
 8000520:	fa01 f303 	lsl.w	r3, r1, r3
 8000524:	43db      	mvns	r3, r3
 8000526:	401a      	ands	r2, r3
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	601a      	str	r2, [r3, #0]
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	681a      	ldr	r2, [r3, #0]
 8000530:	683b      	ldr	r3, [r7, #0]
 8000532:	791b      	ldrb	r3, [r3, #4]
 8000534:	4619      	mov	r1, r3
 8000536:	697b      	ldr	r3, [r7, #20]
 8000538:	005b      	lsls	r3, r3, #1
 800053a:	fa01 f303 	lsl.w	r3, r1, r3
 800053e:	431a      	orrs	r2, r3
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	601a      	str	r2, [r3, #0]
 8000544:	683b      	ldr	r3, [r7, #0]
 8000546:	791b      	ldrb	r3, [r3, #4]
 8000548:	2b01      	cmp	r3, #1
 800054a:	d003      	beq.n	8000554 <GPIO_Init+0x76>
 800054c:	683b      	ldr	r3, [r7, #0]
 800054e:	791b      	ldrb	r3, [r3, #4]
 8000550:	2b02      	cmp	r3, #2
 8000552:	d12e      	bne.n	80005b2 <GPIO_Init+0xd4>
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	689a      	ldr	r2, [r3, #8]
 8000558:	697b      	ldr	r3, [r7, #20]
 800055a:	005b      	lsls	r3, r3, #1
 800055c:	2103      	movs	r1, #3
 800055e:	fa01 f303 	lsl.w	r3, r1, r3
 8000562:	43db      	mvns	r3, r3
 8000564:	401a      	ands	r2, r3
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	609a      	str	r2, [r3, #8]
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	689a      	ldr	r2, [r3, #8]
 800056e:	683b      	ldr	r3, [r7, #0]
 8000570:	795b      	ldrb	r3, [r3, #5]
 8000572:	4619      	mov	r1, r3
 8000574:	697b      	ldr	r3, [r7, #20]
 8000576:	005b      	lsls	r3, r3, #1
 8000578:	fa01 f303 	lsl.w	r3, r1, r3
 800057c:	431a      	orrs	r2, r3
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	609a      	str	r2, [r3, #8]
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	685a      	ldr	r2, [r3, #4]
 8000586:	697b      	ldr	r3, [r7, #20]
 8000588:	b29b      	uxth	r3, r3
 800058a:	4619      	mov	r1, r3
 800058c:	2301      	movs	r3, #1
 800058e:	408b      	lsls	r3, r1
 8000590:	43db      	mvns	r3, r3
 8000592:	401a      	ands	r2, r3
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	605a      	str	r2, [r3, #4]
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	685b      	ldr	r3, [r3, #4]
 800059c:	683a      	ldr	r2, [r7, #0]
 800059e:	7992      	ldrb	r2, [r2, #6]
 80005a0:	4611      	mov	r1, r2
 80005a2:	697a      	ldr	r2, [r7, #20]
 80005a4:	b292      	uxth	r2, r2
 80005a6:	fa01 f202 	lsl.w	r2, r1, r2
 80005aa:	b292      	uxth	r2, r2
 80005ac:	431a      	orrs	r2, r3
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	605a      	str	r2, [r3, #4]
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	68da      	ldr	r2, [r3, #12]
 80005b6:	697b      	ldr	r3, [r7, #20]
 80005b8:	b29b      	uxth	r3, r3
 80005ba:	005b      	lsls	r3, r3, #1
 80005bc:	2103      	movs	r1, #3
 80005be:	fa01 f303 	lsl.w	r3, r1, r3
 80005c2:	43db      	mvns	r3, r3
 80005c4:	401a      	ands	r2, r3
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	60da      	str	r2, [r3, #12]
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	68da      	ldr	r2, [r3, #12]
 80005ce:	683b      	ldr	r3, [r7, #0]
 80005d0:	79db      	ldrb	r3, [r3, #7]
 80005d2:	4619      	mov	r1, r3
 80005d4:	697b      	ldr	r3, [r7, #20]
 80005d6:	005b      	lsls	r3, r3, #1
 80005d8:	fa01 f303 	lsl.w	r3, r1, r3
 80005dc:	431a      	orrs	r2, r3
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	60da      	str	r2, [r3, #12]
 80005e2:	697b      	ldr	r3, [r7, #20]
 80005e4:	3301      	adds	r3, #1
 80005e6:	617b      	str	r3, [r7, #20]
 80005e8:	697b      	ldr	r3, [r7, #20]
 80005ea:	2b0f      	cmp	r3, #15
 80005ec:	d985      	bls.n	80004fa <GPIO_Init+0x1c>
 80005ee:	bf00      	nop
 80005f0:	371c      	adds	r7, #28
 80005f2:	46bd      	mov	sp, r7
 80005f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005f8:	4770      	bx	lr
	...

080005fc <RCC_AHB1PeriphClockCmd>:
 80005fc:	b480      	push	{r7}
 80005fe:	b083      	sub	sp, #12
 8000600:	af00      	add	r7, sp, #0
 8000602:	6078      	str	r0, [r7, #4]
 8000604:	460b      	mov	r3, r1
 8000606:	70fb      	strb	r3, [r7, #3]
 8000608:	78fb      	ldrb	r3, [r7, #3]
 800060a:	2b00      	cmp	r3, #0
 800060c:	d006      	beq.n	800061c <RCC_AHB1PeriphClockCmd+0x20>
 800060e:	4b0a      	ldr	r3, [pc, #40]	; (8000638 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000610:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000612:	4909      	ldr	r1, [pc, #36]	; (8000638 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	4313      	orrs	r3, r2
 8000618:	630b      	str	r3, [r1, #48]	; 0x30
 800061a:	e006      	b.n	800062a <RCC_AHB1PeriphClockCmd+0x2e>
 800061c:	4b06      	ldr	r3, [pc, #24]	; (8000638 <RCC_AHB1PeriphClockCmd+0x3c>)
 800061e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	43db      	mvns	r3, r3
 8000624:	4904      	ldr	r1, [pc, #16]	; (8000638 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000626:	4013      	ands	r3, r2
 8000628:	630b      	str	r3, [r1, #48]	; 0x30
 800062a:	bf00      	nop
 800062c:	370c      	adds	r7, #12
 800062e:	46bd      	mov	sp, r7
 8000630:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000634:	4770      	bx	lr
 8000636:	bf00      	nop
 8000638:	40023800 	.word	0x40023800

0800063c <__libc_init_array>:
 800063c:	b570      	push	{r4, r5, r6, lr}
 800063e:	4d0d      	ldr	r5, [pc, #52]	; (8000674 <__libc_init_array+0x38>)
 8000640:	4c0d      	ldr	r4, [pc, #52]	; (8000678 <__libc_init_array+0x3c>)
 8000642:	1b64      	subs	r4, r4, r5
 8000644:	10a4      	asrs	r4, r4, #2
 8000646:	2600      	movs	r6, #0
 8000648:	42a6      	cmp	r6, r4
 800064a:	d109      	bne.n	8000660 <__libc_init_array+0x24>
 800064c:	4d0b      	ldr	r5, [pc, #44]	; (800067c <__libc_init_array+0x40>)
 800064e:	4c0c      	ldr	r4, [pc, #48]	; (8000680 <__libc_init_array+0x44>)
 8000650:	f000 f818 	bl	8000684 <_init>
 8000654:	1b64      	subs	r4, r4, r5
 8000656:	10a4      	asrs	r4, r4, #2
 8000658:	2600      	movs	r6, #0
 800065a:	42a6      	cmp	r6, r4
 800065c:	d105      	bne.n	800066a <__libc_init_array+0x2e>
 800065e:	bd70      	pop	{r4, r5, r6, pc}
 8000660:	f855 3b04 	ldr.w	r3, [r5], #4
 8000664:	4798      	blx	r3
 8000666:	3601      	adds	r6, #1
 8000668:	e7ee      	b.n	8000648 <__libc_init_array+0xc>
 800066a:	f855 3b04 	ldr.w	r3, [r5], #4
 800066e:	4798      	blx	r3
 8000670:	3601      	adds	r6, #1
 8000672:	e7f2      	b.n	800065a <__libc_init_array+0x1e>
 8000674:	0800069c 	.word	0x0800069c
 8000678:	0800069c 	.word	0x0800069c
 800067c:	0800069c 	.word	0x0800069c
 8000680:	080006a0 	.word	0x080006a0

08000684 <_init>:
 8000684:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000686:	bf00      	nop
 8000688:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800068a:	bc08      	pop	{r3}
 800068c:	469e      	mov	lr, r3
 800068e:	4770      	bx	lr

08000690 <_fini>:
 8000690:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000692:	bf00      	nop
 8000694:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000696:	bc08      	pop	{r3}
 8000698:	469e      	mov	lr, r3
 800069a:	4770      	bx	lr
